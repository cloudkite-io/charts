apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pritunl.fullname" . }}
  labels:
{{ include "pritunl.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pritunl.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
{{ include "pritunl.labels" . | indent 8 }}
    spec:
      annotations:
        net.ipv4.ip_forward: "1"
      securityContext:
        sysctls:
        - name: net.ipv4.ip_forward
          value: "1"
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        # Whitelists net.ipv4.ip_forward sysctl
        - name: sysctl-buddy
          image: busybox:1.29
          securityContext:
            privileged: true
          command: ["/bin/sh"]
          args:
            - -c
            - sysctl -w net.ipv4.ip_forward=1
          resources:
            requests:
              cpu: 1m
              memory: 1Mi
        - name: {{ .Chart.Name }}
          image: "{{ .Values.pritunl.image.repository }}:{{ .Values.pritunl.image.tag }}"
          imagePullPolicy: {{ .Values.pritunl.image.pullPolicy }}
          env:
            {{ toYaml .Values.pritunl.service.environment | nindent 12 }}
          ports:
          {{ range $index, $port := .Values.pritunl.service.ports }}
            - containerPort: {{ $port.value }}
              protocol: TCP
          {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: pritunl
  namespace: pritunl
  annotations:
    {{- toYaml .Values.pritunl.service.annotations | nindent 4 }}
  labels:
    {{ include "pritunl.labels" . | nindent 4 }}
spec:
  type: {{ .Values.pritunl.service.type }}
  ports:
  {{ range $index, $port := .Values.pritunl.service.ports }}
  - name: {{ $port.name }}
    port: {{ $port.value }}
    targetPort: {{ $port.value }}
    protocol: {{ $port.protocol }}
  {{ end }}
  selector:
    app: pritunl
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.pritunl.pvc.name }}
  namespace: pritunl
  labels:
    app: pritunl
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.pritunl.pvc.request.storage }}
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: ip-forwarding
spec:
 allowedUnsafeSysctls:
   - net.ipv4.ip_forward
 runAsUser:
   rule: MustRunAsNonRoot
 seLinux:
   # This policy assumes the nodes are using AppArmor rather than SELinux.
   rule: MustRunAs
 supplementalGroups:
   rule: 'MustRunAs'
   ranges:
     # Forbid adding the root group.
     - min: 1
       max: 65535
 fsGroup:
   rule: 'MustRunAs'
   ranges:
     # Forbid adding the root group.
     - min: 1
       max: 65535
